Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./timer.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./eeprom.o
LOAD ./i2c.o
LOAD ./timer.o
LOAD ./usart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xa8a
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./eeprom.o
 .text          0x0000007c        0x0 ./i2c.o
 .text          0x0000007c        0x0 ./timer.o
 .text          0x0000007c        0x0 ./usart.o
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.EEPROM_init
                0x0000007c       0x18 ./eeprom.o
                0x0000007c                EEPROM_init
 .text.EEPROM_writeByte
                0x00000094       0x82 ./eeprom.o
                0x00000094                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000116       0xc0 ./eeprom.o
                0x00000116                EEPROM_readByte
 .text.TWI_init
                0x000001d6       0x48 ./i2c.o
                0x000001d6                TWI_init
 .text.TWI_start
                0x0000021e       0x20 ./i2c.o
                0x0000021e                TWI_start
 .text.TWI_stop
                0x0000023e       0x16 ./i2c.o
                0x0000023e                TWI_stop
 .text.TWI_write
                0x00000254       0x2e ./i2c.o
                0x00000254                TWI_write
 .text.TWI_readWithACK
                0x00000282       0x26 ./i2c.o
                0x00000282                TWI_readWithACK
 .text.TWI_readWithNACK
                0x000002a8       0x26 ./i2c.o
                0x000002a8                TWI_readWithNACK
 .text.TWI_getStatus
                0x000002ce       0x1e ./i2c.o
                0x000002ce                TWI_getStatus
 .text.__vector_9
                0x000002ec       0x66 ./timer.o
                0x000002ec                __vector_9
 .text.__vector_8
                0x00000352       0x66 ./timer.o
                0x00000352                __vector_8
 .text.__vector_4
                0x000003b8       0x66 ./timer.o
                0x000003b8                __vector_4
 .text.__vector_19
                0x0000041e       0x66 ./timer.o
                0x0000041e                __vector_19
 .text.__vector_6
                0x00000484       0x66 ./timer.o
                0x00000484                __vector_6
 .text.__vector_3
                0x000004ea       0x66 ./timer.o
                0x000004ea                __vector_3
 .text.TIMER_init
                0x00000550       0x48 ./timer.o
                0x00000550                TIMER_init
 .text.TIMER0_init
                0x00000598       0xc2 ./timer.o
 .text.TIMER2_init
                0x0000065a       0xc2 ./timer.o
 .text.TIMER1_init
                0x0000071c      0x122 ./timer.o
 .text.Timer0_setCallBack
                0x0000083e       0x24 ./timer.o
                0x0000083e                Timer0_setCallBack
 .text.Timer1_setCallBack
                0x00000862       0x24 ./timer.o
                0x00000862                Timer1_setCallBack
 .text.Timer2_setCallBack
                0x00000886       0x24 ./timer.o
                0x00000886                Timer2_setCallBack
 .text.USART_init
                0x000008aa       0xd0 ./usart.o
                0x000008aa                USART_init
 .text.USART_sendByte
                0x0000097a       0x2e ./usart.o
                0x0000097a                USART_sendByte
 .text.USART_recieveByte
                0x000009a8       0x1e ./usart.o
                0x000009a8                USART_recieveByte
 .text.USART_sendString
                0x000009c6       0x52 ./usart.o
                0x000009c6                USART_sendString
 .text.USART_receiveString
                0x00000a18       0x6e ./usart.o
                0x00000a18                USART_receiveString
 .text.libgcc   0x00000a86        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000a86        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000a86                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000a86        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000a86                exit
                0x00000a86                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000a86        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000a8a                _etext = .

.data           0x00800060        0x0 load address 0x00000a8a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./eeprom.o
 .data          0x00800060        0x0 ./i2c.o
 .data          0x00800060        0x0 ./timer.o
 .data          0x00800060        0x0 ./usart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x6
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800060        0x0 ./eeprom.o
 .bss           0x00800060        0x0 ./i2c.o
 .bss           0x00800060        0x0 ./timer.o
 .bss           0x00800060        0x0 ./usart.o
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.g_CallBackPtr0
                0x00800060        0x2 ./timer.o
 .bss.g_CallBackPtr1
                0x00800062        0x2 ./timer.o
 .bss.g_CallBackPtr2
                0x00800064        0x2 ./timer.o
 *(COMMON)
                0x00800066                PROVIDE (__bss_end, .)
                0x00000a8a                __data_load_start = LOADADDR (.data)
                0x00000a8a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800066        0x0
                0x00800066                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800066                PROVIDE (__noinit_end, .)
                0x00800066                _end = .
                0x00800066                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x138c
 *(.stab)
 .stab          0x00000000      0x5f4 ./eeprom.o
 .stab          0x000005f4      0x360 ./i2c.o
                                0x5dc (size before relaxing)
 .stab          0x00000954      0x648 ./timer.o
                                0x8a0 (size before relaxing)
 .stab          0x00000f9c      0x3f0 ./usart.o
                                0x648 (size before relaxing)

.stabstr        0x00000000     0x1214
 *(.stabstr)
 .stabstr       0x00000000     0x1214 ./eeprom.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(final_project2.elf elf32-avr)
LOAD linker stubs
